# Spring Boot 应用名称
spring.application.name=springboot3-demo

# 日志配置
# 设置日志级别
logging.level.root=info
# 生成日志文件
logging.file.name=./logs/springboot3-demo.log

# Web 项目基础配置
# 设置项目启动的端口号
server.port=8080
# 设置项目路径，构成 url 地址的一部分
server.servlet.context-path=/api

# 静态资源配置
# 设置静态资源路径
spring.web.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/lanqiao/

# 整合 JSP 配置
# 指明视图文件在 webapp 下的路径
spring.mvc.view.prefix=/WEB-INF/pages/
# 指明视图文件的文件后缀名
spring.mvc.view.suffix=.jsp

# Thymeleaf 配置项
# Thymeleaf 的默认缓存设置是通过配置文件的 spring.thymeleaf.cache 配置属性决定的
# ThymeleafProperties 可以发现该属性默认为 true，因此 Thymeleaf 默认是使用模板缓存的，
# 该设置有助于改善应用程序的性能，因为模板只需编译一次即可
# 但是在开发过程中不能实时看到页面变更的效果，除非重启应用程序，因此建议将该属性设置为 false
spring.thymeleaf.cache=false

# FreeMarker 配置项
# 配置 FreeMarker 模板引擎的文件后缀名
spring.freemarker.suffix=.ftl

# 数据源基本配置
# 配置数据库连接的 URL
spring.datasource.url=jdbc:mysql://localhost:3306/springboot3_db?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
# 配置数据库连接的驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 配置数据库连接的用户名
spring.datasource.username=root
# 配置数据库连接的密码
spring.datasource.password=123456

# Druid 数据源配置
# 指定数据源类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# Druid 连接池配置
# 初始化时建立数据库连接的个数
spring.datasource.druid.initial-size=10
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 检测连接是否有效的 SQL 语句
spring.datasource.druid.validation-query=SELECT 1
# 在连接池处于空闲状态时，检测连接是否有效（true 启用 false 不启用）
spring.datasource.druid.test-while-idle=true
# 申请连接时会执行 validationQuery 检测连接是否有效，开启会降低性能，默认为 true
spring.datasource.druid.test-on-borrow=false
# 归还连接时会执行 validationQuery 检测连接是否有效，开启会降低性能，默认为 true
spring.datasource.druid.test-on-return=false
# 是否缓存 preparedStatement, 也就是 PSCache，PSCache 对支持游标的数据库性能提升巨大，比如说 oracle，在 mysql 下建议关闭
spring.datasource.druid.pool-prepared-statements=false
# 要启用 PSCache，必须配置大于 0，当大于 0 时，poolPreparedStatements 自动触发修改为 true。在 Druid 中，不会存在 Oracle 下 PSCache 占用内存过多的问题，可以把这个数值配置大一些，比如说 100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# 合并多个 DruidDataSource 的监控数据
spring.datasource.druid.use-global-data-source-stat=true
# 配置过滤器，过滤掉一些静态资源和不需要监控的请求
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# 配置可视化监控的页面
spring.datasource.druid.stat-view-servlet.enabled=true
# 配置监控页面的访问路径
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 配置监控页面的登录用户名
spring.datasource.druid.stat-view-servlet.login-username=admin
# 配置监控页面的登录密码
spring.datasource.druid.stat-view-servlet.login-password=123456
# 配置监控页面的 IP 白名单
#spring.datasource.druid.stat-view-servlet.allow=
# 配置监控页面的 IP 黑名单
#spring.datasource.druid.stat-view-servlet.deny=
# 配置监控页面的重置按钮
spring.datasource.druid.stat-view-servlet.reset-enable=false

# MyBatis 配置项
# 配置 Mapper 文件对应的 XML 文件路径
mybatis.mapper-locations=classpath:/mapper/*Dao.xml
# 配置项目中实体类包路径
mybatis.type-aliases-package=com.mlinyun.springboot3demo.entity

# MyBatisPlus 配置项
# 设置逻辑删除的值为 1。在使用 MyBatis-Plus 进行逻辑删除时，数据库中相应字段的值将被修改为该值
mybatis-plus.global-config.db-config.logic-delete-value=1
# 设置逻辑未删除的值为 0。在使用 MyBatis-Plus 进行逻辑删除时，数据库中相应字段的值将被修改为该值
mybatis-plus.global-config.db-config.logic-not-delete-value=0
# 设置全局逻辑删除实体字段名
mybatis-plus.global-config.db-config.logic-delete-field=isDelete
# 指定 MyBatis Mapper XML 文件的路径， MyBatis-Plus 将扫描该路径下的 XML 文件
mybatis-plus.mapper-locations=classpath*:mapper/*Dao.xml
# 设置 MyBatis 的日志实现类为 org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# 关闭驼峰命名规则映射
mybatis-plus.configuration.map-underscore-to-camel-case=false

# Redis 配置
# Redis 服务器地址
spring.data.redis.host=localhost
# Redis 服务器端口
spring.data.redis.port=6379
# Redis 服务器密码
spring.data.redis.password=123456
# Redis 数据库索引
spring.data.redis.database=0
# Redis 连接超时时间
spring.data.redis.connect-timeout=10000
# Redis 连接池配置
# Redis 连接池最大连接数，默认值为 8
spring.data.redis.lettuce.pool.max-active=8
# Redis 连接池最大空闲连接，默认值为 8
spring.data.redis.lettuce.pool.max-idle=8
# Redis 连接池最小空闲连接，默认值为 0
spring.data.redis.lettuce.pool.min-idle=0
# Redis 连接池最大阻塞等待时间，默认值为 -1，表示无限等待
spring.data.redis.lettuce.pool.max-wait=-1
